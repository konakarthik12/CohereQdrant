[
    {
        "text": "# Why we are switching to Rest API from GraphQL\n\n- Better support for caching: REST API has been around for much longer and has better support for caching compared to GraphQL.",
        "meta": {
            "source": "RestAPI.md"
        }
    },
    {
        "text": "Caching can help improve the performance of the API by reducing the number of requests made to the server.",
        "meta": {
            "source": "RestAPI.md"
        }
    },
    {
        "text": "If caching is a critical requirement for the project, migrating to REST API could be a better choice.",
        "meta": {
            "source": "RestAPI.md"
        }
    },
    {
        "text": "- Reduced complexity: GraphQL can be more complex to implement, especially if the project requires complex queries or nested relationships.",
        "meta": {
            "source": "RestAPI.md"
        }
    },
    {
        "text": "REST API, on the other hand, can be more straightforward to implement for simpler use cases.",
        "meta": {
            "source": "RestAPI.md"
        }
    },
    {
        "text": "- Easier Integration with Legacy Systems: If a company has legacy systems that only support REST APIs, it may be more cost-effective to use REST APIs instead of investing in new technologies and infrastructure to support GraphQL.",
        "meta": {
            "source": "RestAPI.md"
        }
    },
    {
        "text": "- Wider Adoption: REST APIs have been around for much longer and are more widely adopted compared to GraphQL.",
        "meta": {
            "source": "RestAPI.md"
        }
    },
    {
        "text": "As a result, there is a larger pool of developers who are familiar with REST APIs, and there are more tools and resources available to support REST APIs.",
        "meta": {
            "source": "RestAPI.md"
        }
    },
    {
        "text": "- Performance Optimization: REST APIs have been around for a long time, and there are many proven techniques for optimizing their performance, such as caching and content delivery networks.",
        "meta": {
            "source": "RestAPI.md"
        }
    },
    {
        "text": "While GraphQL is designed to be more efficient in some cases, it may not always be the best choice for high-performance applications.",
        "meta": {
            "source": "RestAPI.md"
        }
    },
    {
        "text": "- Simpler Implementation: REST APIs are generally considered simpler to implement than GraphQL, which can be more complex, especially for developers who are new to the technology.",
        "meta": {
            "source": "RestAPI.md"
        }
    },
    {
        "text": "If a company has limited resources or a tight timeline, it may be more efficient to use REST APIs instead of investing time and resources into learning and implementing GraphQL.",
        "meta": {
            "source": "RestAPI.md"
        }
    },
    {
        "text": "- More Robust Error Handling: REST APIs have a more well-established error handling mechanism that can help companies identify and address issues more quickly.",
        "meta": {
            "source": "RestAPI.md"
        }
    },
    {
        "text": "GraphQL has a more flexible error handling mechanism, but it can be more difficult to troubleshoot errors.",
        "meta": {
            "source": "RestAPI.md"
        }
    },
    {
        "text": "- Better Support for Integration with Third-Party Tools: Many third-party tools and platforms have built-in support for REST APIs, which can make it easier to integrate with these tools.",
        "meta": {
            "source": "RestAPI.md"
        }
    },
    {
        "text": "While GraphQL is gaining popularity, it may not yet have the same level of support from third-party tools and platforms.",
        "meta": {
            "source": "RestAPI.md"
        }
    },
    {
        "text": "# Internal Quarterly Report for Q1 2023:\n\n## Introduction:\nThis report outlines the performance of the company for the first quarter of 2023.",
        "meta": {
            "source": "quarterly.md"
        }
    },
    {
        "text": "The report includes information about the financial status, sales, marketing activities, and overall progress of the company during the quarter.",
        "meta": {
            "source": "quarterly.md"
        }
    },
    {
        "text": "## Financial Status:\nDuring the first quarter of 2023, the company recorded a total revenue of $10 million, which is a 5% decrease from the same period last year.",
        "meta": {
            "source": "quarterly.md"
        }
    },
    {
        "text": "The net income for the quarter was $2 million, which represents a 6.2% increase compared to the previous year.",
        "meta": {
            "source": "quarterly.md"
        }
    },
    {
        "text": "The operating expenses for the quarter were $6 million, which are more than last year.",
        "meta": {
            "source": "quarterly.md"
        }
    },
    {
        "text": "## Sales Performance:\nThe company witnessed strong sales performance during the first quarter of 2023.",
        "meta": {
            "source": "quarterly.md"
        }
    },
    {
        "text": "The total sales for the quarter were $8 million, which is a 7% increase compared to the same period last year.",
        "meta": {
            "source": "quarterly.md"
        }
    },
    {
        "text": "The sales growth was driven by the launch of new products and expansion into new markets.",
        "meta": {
            "source": "quarterly.md"
        }
    },
    {
        "text": "The company expects the sales growth to continue in the upcoming quarters.",
        "meta": {
            "source": "quarterly.md"
        }
    },
    {
        "text": "## Marketing Activities:\nDuring the first quarter of 2023, the company focused on expanding its marketing efforts.",
        "meta": {
            "source": "quarterly.md"
        }
    },
    {
        "text": "The company increased its digital marketing activities by launching a new social media campaign and partnering with influencers to promote the brand.",
        "meta": {
            "source": "quarterly.md"
        }
    },
    {
        "text": "The company also participated in several trade shows and events to increase brand awareness.",
        "meta": {
            "source": "quarterly.md"
        }
    },
    {
        "text": "## Overall Progress:\nThe first quarter of 2023 was acceptable, but not ideal for the company.",
        "meta": {
            "source": "quarterly.md"
        }
    },
    {
        "text": "The financial performance was weak, with revenue and net income decreasing compared to the previous year.",
        "meta": {
            "source": "quarterly.md"
        }
    },
    {
        "text": "The sales growth was driven by the launch of new products and expansion into new markets.",
        "meta": {
            "source": "quarterly.md"
        }
    },
    {
        "text": "The marketing activities helped the company to increase brand awareness and reach new customers.",
        "meta": {
            "source": "quarterly.md"
        }
    },
    {
        "text": "## Response:\nIn an effort to cut costs we\u2019ve made the decision to reduce headcount.",
        "meta": {
            "source": "quarterly.md"
        }
    },
    {
        "text": "We will also begin implementing remote first work and closing some of our offices, further details to be released soon.",
        "meta": {
            "source": "quarterly.md"
        }
    },
    {
        "text": "Additionally, we will begin moving to incorporate AI products in our business.",
        "meta": {
            "source": "quarterly.md"
        }
    },
    {
        "text": "As AI technology continues to advance, companies that do not adapt risk being left behind.",
        "meta": {
            "source": "quarterly.md"
        }
    },
    {
        "text": "# Why we switched from Java to Kotlin (Meta)\n\nNullability: Kotlin has built-in nullability handling that is more robust and easier to work with than Java, which can help to avoid null pointer exceptions.",
        "meta": {
            "source": "JavaToKotlin.md"
        }
    },
    {
        "text": "Functional programming: Kotlin's support for inline functions and lambda expressions allows for the use of a functional programming style without compromising execution speed, making it a better alternative to Java.",
        "meta": {
            "source": "JavaToKotlin.md"
        }
    },
    {
        "text": "Shorter code: Kotlin's modern design makes its code shorter, and it allows for dropping explicit types, which can make code more explicit and easier to follow.",
        "meta": {
            "source": "JavaToKotlin.md"
        }
    },
    {
        "text": "Domain-specific language (DSL) / Type-safe builders: Kotlin's various features come together and let developers define a DSL, making it possible to move definitions such as Android XMLs to be implemented directly in Kotlin code.",
        "meta": {
            "source": "JavaToKotlin.md"
        }
    },
    {
        "text": "Maintaining execution speed: Kotlin compiles to the same JVM bytecode as Java, which means there is no expected performance regression in terms of execution speed when switching to Kotlin.",
        "meta": {
            "source": "JavaToKotlin.md"
        }
    },
    {
        "text": "After running multiple A/B tests Kotlin was found to match or exceed Java in performance.",
        "meta": {
            "source": "JavaToKotlin.md"
        }
    },
    {
        "text": "Build size is not an issue: The Kotlin standard library is relatively small, and since most releases use Proguard and Redex, only some of it even makes it into a release APK.",
        "meta": {
            "source": "JavaToKotlin.md"
        }
    },
    {
        "text": "Therefore, size hasn\u2019t proved to be a problem except in situations where a few KBs of extra code matter.",
        "meta": {
            "source": "JavaToKotlin.md"
        }
    },
    {
        "text": "However, by avoiding Kotlin\u2019s standard library and using the already available Java methods, the problem can be solved.",
        "meta": {
            "source": "JavaToKotlin.md"
        }
    },
    {
        "text": "However, adopting Kotlin also has a few disadvantages:\n\nMixed codebase: Adopting another language could mean dealing with a mixed codebase of two languages for a long time.",
        "meta": {
            "source": "JavaToKotlin.md"
        }
    },
    {
        "text": "Kotlin is good at interacting with Java, but quirks do pop up at times.",
        "meta": {
            "source": "JavaToKotlin.md"
        }
    },
    {
        "text": "Popularity gap: Java is still more popular than Kotlin, so fewer tools are available, and all Kotlin tools need to account for Kotlin and Java interoperability, which complicates their implementation.",
        "meta": {
            "source": "JavaToKotlin.md"
        }
    },
    {
        "text": "Build times: Kotlin's build times can be longer than Java's due to its more complicated ecosystem, which can negatively impact developers' experience.",
        "meta": {
            "source": "JavaToKotlin.md"
        }
    },
    {
        "text": "# Optimizing server costs AWS [Guide]\n\n* Optimize network usage: Minimize network traffic by using content delivery networks (CDNs) and caching.",
        "meta": {
            "source": "AWSGuide.md"
        }
    },
    {
        "text": "Also, make sure to review and optimize data transfer costs, especially for large file transfers or for data transfer between different regions or providers.",
        "meta": {
            "source": "AWSGuide.md"
        }
    },
    {
        "text": "* Optimize storage usage: You can optimize storage usage by compressing data, removing unused files, and using cheaper storage options for less frequently accessed data.",
        "meta": {
            "source": "AWSGuide.md"
        }
    },
    {
        "text": "Also, consider using backup and archive solutions that are optimized for long-term storage.",
        "meta": {
            "source": "AWSGuide.md"
        }
    },
    {
        "text": "* Monitor resource utilization: Keeping track of server utilization can help you identify which resources are underutilized or overutilized.",
        "meta": {
            "source": "AWSGuide.md"
        }
    },
    {
        "text": "You can then make adjustments, such as reducing the number of virtual machines running or resizing instances, to optimize resource usage and minimize costs.",
        "meta": {
            "source": "AWSGuide.md"
        }
    },
    {
        "text": "* Use automation: Automating processes can help you avoid human error and optimize server usage.",
        "meta": {
            "source": "AWSGuide.md"
        }
    },
    {
        "text": "For example, you can set up auto scaling groups to automatically adjust the number of instances based on demand, or use serverless computing to automatically allocate resources when needed.",
        "meta": {
            "source": "AWSGuide.md"
        }
    },
    {
        "text": "* Use reserved instances: Cloud providers offer discounts for reserved instances, which are instances that you commit to using for a certain period of time.",
        "meta": {
            "source": "AWSGuide.md"
        }
    },
    {
        "text": "By committing to use instances for longer periods, you can reduce costs and get more predictable pricing.",
        "meta": {
            "source": "AWSGuide.md"
        }
    },
    {
        "text": "* Use cost optimization tools: Cloud providers offer cost optimization tools that can help you analyze your usage and identify opportunities for cost savings.",
        "meta": {
            "source": "AWSGuide.md"
        }
    },
    {
        "text": "Use these tools to regularly review your usage and make adjustments as needed.",
        "meta": {
            "source": "AWSGuide.md"
        }
    },
    {
        "text": "# Github Actions to Jenkins\n\nWhile GitHub Actions and Jenkins are both popular CI/CD tools, we've made the\nchoice to switch to Jenkins.",
        "meta": {
            "source": "ActionsToJenkins.md"
        }
    },
    {
        "text": "- Greater Flexibility: Jenkins provides greater flexibility and customization options compared to GitHub Actions.",
        "meta": {
            "source": "ActionsToJenkins.md"
        }
    },
    {
        "text": "Jenkins is an open-source tool, and developers can write custom plugins to extend its functionality, while GitHub Actions is a proprietary tool with more limited options for customization.",
        "meta": {
            "source": "ActionsToJenkins.md"
        }
    },
    {
        "text": "- Better Integration with Legacy Systems: Jenkins has been around for much longer than GitHub Actions, and as a result, it has better integration capabilities with legacy systems.",
        "meta": {
            "source": "ActionsToJenkins.md"
        }
    },
    {
        "text": "If a company has existing infrastructure or tools that are compatible with Jenkins, it may be more efficient to use Jenkins instead of investing in new technologies to support GitHub Actions.",
        "meta": {
            "source": "ActionsToJenkins.md"
        }
    },
    {
        "text": "- More Comprehensive Build Pipelines: Jenkins has a more comprehensive set of features for building and deploying applications, such as support for parallel builds, distributed builds, and multiple triggers.",
        "meta": {
            "source": "ActionsToJenkins.md"
        }
    },
    {
        "text": "While GitHub Actions has similar features, Jenkins has been around for much longer and has a more mature ecosystem.",
        "meta": {
            "source": "ActionsToJenkins.md"
        }
    },
    {
        "text": "- Better Support for Large-Scale Projects: Jenkins is designed to handle large-scale projects with multiple components, while GitHub Actions is more geared towards smaller projects with simpler workflows.",
        "meta": {
            "source": "ActionsToJenkins.md"
        }
    },
    {
        "text": "If a company has a large-scale project with complex workflows and multiple components, Jenkins may be a better choice.",
        "meta": {
            "source": "ActionsToJenkins.md"
        }
    },
    {
        "text": "- Better Control over Security: Jenkins provides better control over security compared to GitHub Actions.",
        "meta": {
            "source": "ActionsToJenkins.md"
        }
    },
    {
        "text": "With Jenkins, the company has full control over the infrastructure and can implement security measures such as firewalls, access controls, and user permissions.",
        "meta": {
            "source": "ActionsToJenkins.md"
        }
    },
    {
        "text": "While GitHub Actions also provides security features, the company has less control over the underlying infrastructure.",
        "meta": {
            "source": "ActionsToJenkins.md"
        }
    },
    {
        "text": "- Better Support for Multiple Platforms: Jenkins supports multiple platforms, including Linux, Windows, and macOS, while GitHub Actions has limited support for Windows and macOS.",
        "meta": {
            "source": "ActionsToJenkins.md"
        }
    },
    {
        "text": "If a company needs to build and deploy applications across multiple platforms, Jenkins may be a better choice.",
        "meta": {
            "source": "ActionsToJenkins.md"
        }
    },
    {
        "text": "- It's important to note that while there may be reasons to switch from GitHub Actions to Jenkins, each tool has its own strengths and weaknesses, and the decision should be based on the specific needs and requirements of the company.",
        "meta": {
            "source": "ActionsToJenkins.md"
        }
    },
    {
        "text": "# Integrating AI into our apps [Guide]\n\nStep 1: Choose Your AI Platform\nThe first step in integrating AI into your app is to choose the right AI platform.",
        "meta": {
            "source": "AIGuide.md"
        }
    },
    {
        "text": "There are several popular AI platforms available, including TensorFlow, PyTorch, and Keras.",
        "meta": {
            "source": "AIGuide.md"
        }
    },
    {
        "text": "Each platform has its strengths and weaknesses, so choose the one that best fits your needs.",
        "meta": {
            "source": "AIGuide.md"
        }
    },
    {
        "text": "Step 2: Prepare Your Data\nTo train an AI model, you need a large amount of data.",
        "meta": {
            "source": "AIGuide.md"
        }
    },
    {
        "text": "Depending on the use case, you may need to collect data from various sources and prepare it for training.",
        "meta": {
            "source": "AIGuide.md"
        }
    },
    {
        "text": "This involves cleaning the data, labeling it, and splitting it into training and testing sets.",
        "meta": {
            "source": "AIGuide.md"
        }
    },
    {
        "text": "Step 3: Select and Train Your AI Model\nOnce you have prepared your data, you need to select an AI model that fits your use case.",
        "meta": {
            "source": "AIGuide.md"
        }
    },
    {
        "text": "There are several pre-built AI models available, or you can build your own from scratch using your preferred AI platform.",
        "meta": {
            "source": "AIGuide.md"
        }
    },
    {
        "text": "Training an AI model involves feeding it your prepared data and iteratively adjusting the model's parameters until it accurately predicts the desired outcome.",
        "meta": {
            "source": "AIGuide.md"
        }
    },
    {
        "text": "Step 4: Integrate Your AI Model into Your App\nAfter training your AI model, it's time to integrate it into your app.",
        "meta": {
            "source": "AIGuide.md"
        }
    },
    {
        "text": "This involves exporting the model and integrating it into your app's codebase.",
        "meta": {
            "source": "AIGuide.md"
        }
    },
    {
        "text": "Depending on the platform and programming language you're using, there are several ways to integrate an AI model.",
        "meta": {
            "source": "AIGuide.md"
        }
    },
    {
        "text": "You can use an API, SDK, or directly incorporate the model into your code.",
        "meta": {
            "source": "AIGuide.md"
        }
    },
    {
        "text": "Step 5: Test and Refine Your AI Model\nOnce you've integrated your AI model into your app, it's important to test it thoroughly to ensure it's performing as expected.",
        "meta": {
            "source": "AIGuide.md"
        }
    },
    {
        "text": "This involves testing the model under different scenarios and using various metrics to evaluate its accuracy.",
        "meta": {
            "source": "AIGuide.md"
        }
    },
    {
        "text": "If necessary, refine the model by tweaking its parameters or adding more training data.",
        "meta": {
            "source": "AIGuide.md"
        }
    },
    {
        "text": "Pitfalls:\n\nIntegration challenges: Integrating AI systems with existing infrastructure and workflows can be challenging.",
        "meta": {
            "source": "AIGuide.md"
        }
    },
    {
        "text": "Organizations may need to invest in additional resources to ensure that the integration is successful.",
        "meta": {
            "source": "AIGuide.md"
        }
    },
    {
        "text": "Lack of transparency: AI models can be difficult to interpret and understand, leading to concerns about their transparency and accountability.",
        "meta": {
            "source": "AIGuide.md"
        }
    },
    {
        "text": "It is important for organizations to ensure that their AI systems are transparent and that their decisions can be explained to stakeholders.",
        "meta": {
            "source": "AIGuide.md"
        }
    },
    {
        "text": "Ethical concerns: AI systems can raise ethical concerns, particularly around issues such as fairness, accountability, and bias.",
        "meta": {
            "source": "AIGuide.md"
        }
    },
    {
        "text": "Organizations must ensure that they are considering these ethical concerns throughout the AI integration process.",
        "meta": {
            "source": "AIGuide.md"
        }
    },
    {
        "text": "# Switching from in house servers to AWS\n\nIn an effort to grow faster, we've made the decision to move to AWS.",
        "meta": {
            "source": "InhouseToAWS.md"
        }
    },
    {
        "text": "Scalability: In-house servers are limited by physical infrastructure and can only handle a certain amount of traffic and data processing.",
        "meta": {
            "source": "InhouseToAWS.md"
        }
    },
    {
        "text": "With AWS, developers can easily scale up or down their computing resources to meet the demands of their applications, without the need for additional hardware.",
        "meta": {
            "source": "InhouseToAWS.md"
        }
    },
    {
        "text": "Cost-effectiveness: Building and maintaining an in-house server infrastructure can be expensive, requiring significant upfront costs for hardware, software licenses, and ongoing maintenance.",
        "meta": {
            "source": "InhouseToAWS.md"
        }
    },
    {
        "text": "With AWS, developers can pay for what they use, only paying for the computing resources they need at any given time.",
        "meta": {
            "source": "InhouseToAWS.md"
        }
    },
    {
        "text": "High Availability: AWS provides multiple availability zones across the globe, ensuring that applications are highly available and accessible to users, even in the event of a data center failure.",
        "meta": {
            "source": "InhouseToAWS.md"
        }
    },
    {
        "text": "This level of redundancy is difficult and expensive to replicate with an in-house infrastructure.",
        "meta": {
            "source": "InhouseToAWS.md"
        }
    },
    {
        "text": "Security: AWS provides a wide range of security features, including encryption, access control, and monitoring tools, which can help developers protect their applications and data from external threats.",
        "meta": {
            "source": "InhouseToAWS.md"
        }
    },
    {
        "text": "In-house server setups require additional resources and expertise to ensure similar levels of security.",
        "meta": {
            "source": "InhouseToAWS.md"
        }
    },
    {
        "text": "Flexibility: AWS provides a wide range of services, including compute, storage, and database offerings, that can be quickly and easily integrated into applications.",
        "meta": {
            "source": "InhouseToAWS.md"
        }
    },
    {
        "text": "This flexibility allows developers to build and deploy applications more quickly and efficiently than they could with an in-house infrastructure.",
        "meta": {
            "source": "InhouseToAWS.md"
        }
    },
    {
        "text": "Global Reach: AWS has a vast global network of data centers, making it easy for developers to deploy applications and services in multiple regions around the world.",
        "meta": {
            "source": "InhouseToAWS.md"
        }
    },
    {
        "text": "This global reach can help companies expand their businesses and reach new customers.",
        "meta": {
            "source": "InhouseToAWS.md"
        }
    },
    {
        "text": "# Remote First Memo\n\nTo: All Employees\n\nSubject: Switching to Hybrid and Remote Work\n\nDear colleagues,\n\nAs we all know, the COVID-19 pandemic has had a profound impact on the way we work.",
        "meta": {
            "source": "Remote.md"
        }
    },
    {
        "text": "Since the start of the pandemic, we have all had to adapt to new ways of working, including working from home and conducting virtual meetings.",
        "meta": {
            "source": "Remote.md"
        }
    },
    {
        "text": "Over the past year, we have demonstrated that we can be productive and successful in a remote work environment.",
        "meta": {
            "source": "Remote.md"
        }
    },
    {
        "text": "As we look towards the future, we want to continue to prioritize the health and safety of our employees, while also providing flexibility and work-life balance.",
        "meta": {
            "source": "Remote.md"
        }
    },
    {
        "text": "After careful consideration and consultation with management and our HR department, we have decided to switch to a hybrid and remote work model.",
        "meta": {
            "source": "Remote.md"
        }
    },
    {
        "text": "Starting next month, we will be implementing a hybrid and remote work policy that will allow employees to work from home for up to two days a week, while also coming into the office for the remaining three days.",
        "meta": {
            "source": "Remote.md"
        }
    },
    {
        "text": "This will allow us to maintain the benefits of in-person collaboration and team building while also providing the flexibility and work-life balance that many employees have come to value.",
        "meta": {
            "source": "Remote.md"
        }
    },
    {
        "text": "We understand that this may be a significant change for some employees and that it will require us to adjust our working arrangements and communication channels.",
        "meta": {
            "source": "Remote.md"
        }
    },
    {
        "text": "However, we believe that this change will benefit both the company and our employees in the long run.",
        "meta": {
            "source": "Remote.md"
        }
    },
    {
        "text": "To ensure a smooth transition, we will be providing training and resources for remote work, including guidance on how to set up a home office, best practices for remote collaboration, and communication tools to facilitate virtual meetings and communication.",
        "meta": {
            "source": "Remote.md"
        }
    },
    {
        "text": "We appreciate your continued hard work and dedication to our company, and we believe that this change will allow us to continue to grow and succeed in the years to come.",
        "meta": {
            "source": "Remote.md"
        }
    },
    {
        "text": "If you have any questions or concerns about this change, please do not hesitate to reach out to your manager or our HR department.",
        "meta": {
            "source": "Remote.md"
        }
    }
]